#include <M5Stack.h>
#include <ESP32Servo.h>    //ESPservo
#include <Wire.h>          // I2C setting
#include <PCA9685.h>       //for PCA9685
#include "BluetoothSerial.h" //BluetoothSerial

BluetoothSerial SerialBT;

int angZero[] = {81,89,1,105,81,98,89,83,91,89,93,101,91,93,95,92,75,180};
int angHome[] = {-45,45,0,0,0,0,-37,52,20,0,0,-20,-52,37,0,0,0,0};
int ang0[18];
int ang1[18];
int ang_b[18];
char ang_c[18];
int ts=10;
int td=10;

// Forward Step
int f_s[40][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,-9,-36,47,18,-9,-9,-18,-47,36,-9,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-13,-8,-63,62,-13,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-12,1,-33,41,-12,0,0,0},
  {-30,55,0,0,0,-6,-34,49,22,-6,-6,-6,-45,45,-6,0,0,0},
  {-30,55,0,0,0,0,-30,50,26,0,0,-12,-50,45,0,0,0,0},
  {-30,55,0,0,0,6,-24,45,28,6,6,-15,-49,41,6,0,0,0},
  {-30,55,0,0,0,12,-13,33,27,12,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,13,-30,63,39,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,13,-62,63,8,13,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,12,-41,33,-1,12,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,6,-45,45,6,6,6,-22,-49,34,6,0,0,0},
  {-55,30,0,0,0,0,-45,50,12,0,0,-26,-50,30,0,0,0,0},
  {-55,30,0,0,0,-6,-41,49,15,-6,-6,-28,-45,24,-6,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-12,-27,-33,13,-12,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-13,-39,-63,30,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-13,-8,-63,62,-13,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-12,1,-33,41,-12,0,0,0},
  {-30,55,0,0,0,-6,-34,49,22,-6,-6,-6,-45,45,-6,0,0,0},
  {-30,55,0,0,0,0,-30,50,26,0,0,-12,-50,45,0,0,0,0},
  {-30,55,0,0,0,6,-24,45,28,6,6,-15,-49,41,6,0,0,0},
  {-30,55,0,0,0,12,-13,33,27,12,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,13,-30,63,39,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,13,-62,63,8,13,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,12,-41,33,-1,12,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,6,-45,45,6,6,6,-22,-49,34,6,0,0,0},
  {-55,30,0,0,0,0,-45,50,12,0,0,-26,-50,30,0,0,0,0},
  {-55,30,0,0,0,-6,-41,49,15,-6,-6,-28,-45,24,-6,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-12,-27,-33,13,-12,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-13,-39,-63,30,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
// Left Step
int l_s[30][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,-9,-36,47,18,-9,-9,-18,-47,36,-9,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,-20,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,-20,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,-20,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,-20,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,-20,0,0},
  {-45,45,0,0,0,12,-34,44,17,12,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,-20,13,-51,70,26,13,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,-20,12,-34,44,17,12,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,-20,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,-20,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,-20,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,-20,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,-20,0,0},
  {-45,45,0,0,0,12,-34,44,17,12,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,-20,13,-51,70,26,13,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,-20,12,-34,44,17,12,12,-17,-44,34,12,-20,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
// Right Step
int r_s[30][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,0,9,-36,47,18,9,9,-18,-47,36,9,0,0,0},
  {-45,45,0,0,0,12,-34,44,17,12,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,12,-34,44,17,12,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,20,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,20,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-13,-26,-70,51,-13,20,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-12,-17,-44,34,-12,20,0,0},
  {-45,45,0,0,20,-6,-38,50,19,-6,-6,-19,-50,38,-6,20,0,0},
  {-45,45,0,0,20,0,-39,52,20,0,0,-20,-52,39,0,20,0,0},
  {-45,45,0,0,0,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,0,12,-34,44,17,12,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,12,-34,44,17,12,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,20,6,-38,50,19,6,6,-19,-50,38,6,0,0,0},
  {-45,45,0,0,20,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,20,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-13,-26,-70,51,-13,20,0,0},
  {-45,45,0,0,20,-12,-34,44,17,-12,-12,-17,-44,34,-12,20,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
// Back Step
int b_s[40][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,-9,-36,47,18,-9,-9,-18,-47,36,-9,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-13,-36,-67,38,-13,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-12,-25,-39,21,-12,0,0,0},
  {-55,30,0,0,0,-6,-40,49,16,-6,-6,-26,-47,29,-6,0,0,0},
  {-55,30,0,0,0,0,-43,51,14,0,0,-24,-51,33,0,0,0,0},
  {-55,30,0,0,0,6,-44,47,11,6,6,-21,-49,35,6,0,0,0},
  {-55,30,0,0,0,12,-41,39,5,12,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,13,-59,67,14,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,13,-38,67,36,13,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,12,-21,39,25,12,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,6,-29,47,26,6,6,-16,-49,40,6,0,0,0},
  {-30,55,0,0,0,0,-33,51,24,0,0,-14,-51,43,0,0,0,0},
  {-30,55,0,0,0,-6,-35,49,21,-6,-6,-11,-47,44,-6,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-12,-5,-39,41,-12,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-13,-14,-67,59,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-13,-36,-67,38,-13,0,0,0},
  {-55,30,0,0,0,-12,-34,44,17,-12,-12,-25,-39,21,-12,0,0,0},
  {-55,30,0,0,0,-6,-40,49,16,-6,-6,-26,-47,29,-6,0,0,0},
  {-55,30,0,0,0,0,-43,51,14,0,0,-24,-51,33,0,0,0,0},
  {-55,30,0,0,0,6,-44,47,11,6,6,-21,-49,35,6,0,0,0},
  {-55,30,0,0,0,12,-41,39,5,12,12,-17,-44,34,12,0,0,0},
  {-55,30,0,0,0,13,-59,67,14,13,12,-17,-44,34,12,0,0,0},
  {-45,45,0,0,0,13,-51,70,26,13,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,13,-38,67,36,13,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,12,-21,39,25,12,12,-17,-44,34,12,0,0,0},
  {-30,55,0,0,0,6,-29,47,26,6,6,-16,-49,40,6,0,0,0},
  {-30,55,0,0,0,0,-33,51,24,0,0,-14,-51,43,0,0,0,0},
  {-30,55,0,0,0,-6,-35,49,21,-6,-6,-11,-47,44,-6,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-12,-5,-39,41,-12,0,0,0},
  {-30,55,0,0,0,-12,-34,44,17,-12,-13,-14,-67,59,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-13,-26,-70,51,-13,0,0,0},
  {-45,45,0,0,0,-12,-34,44,17,-12,-12,-17,-44,34,-12,0,0,0},
  {-45,45,0,0,0,-6,-38,50,19,-6,-6,-19,-50,38,-6,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
// Left Side Step
int ls_s[21][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,-4,-54,75,28,-4,-4,-28,-75,54,-4,0,0,0},
  {-45,45,0,0,0,-6,-54,75,28,-6,-6,-28,-75,54,-6,0,0,0},
  {-45,45,0,0,0,-8,-53,74,27,-8,-8,-27,-74,53,-8,0,0,0},
  {-45,45,0,0,0,-8,-53,74,27,-8,-9,-33,-93,67,-9,0,0,0},
  {-45,45,0,0,0,-8,-53,74,27,-8,-24,-28,-77,55,-24,0,0,0},
  {-45,45,0,0,0,-8,-53,74,27,-8,-22,-21,-55,41,-22,0,0,0},
  {-45,45,0,0,0,-4,-54,75,28,-4,-19,-23,-62,45,-19,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,-15,-25,-67,49,-15,0,0,0},
  {-45,45,0,0,0,4,-54,75,28,4,-12,-27,-71,51,-12,0,0,0},
  {-45,45,0,0,0,8,-53,74,27,8,-8,-27,-74,53,-8,0,0,0},
  {-45,45,0,0,0,12,-51,71,27,12,-4,-28,-75,54,-4,0,0,0},
  {-45,45,0,0,0,15,-49,67,25,15,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,19,-45,62,23,19,4,-28,-75,54,4,0,0,0},
  {-45,45,0,0,0,22,-41,55,21,22,8,-27,-74,53,8,0,0,0},
  {-45,45,0,0,0,26,-35,46,18,26,12,-27,-71,51,12,0,0,0},
  {-45,45,0,0,0,12,-51,71,27,12,12,-27,-71,51,12,0,0,0},
  {-45,45,0,0,0,4,-54,75,28,4,4,-28,-75,54,4,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
// Right Side Step
int rs_s[21][18]={
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,4,-54,75,28,4,4,-28,-75,54,4,0,0,0},
  {-45,45,0,0,0,6,-54,75,28,6,6,-28,-75,54,6,0,0,0},
  {-45,45,0,0,0,8,-53,74,27,8,8,-27,-74,53,8,0,0,0},
  {-45,45,0,0,0,9,-67,93,33,9,8,-27,-74,53,8,0,0,0},
  {-45,45,0,0,0,24,-55,77,28,24,8,-27,-74,53,8,0,0,0},
  {-45,45,0,0,0,22,-41,55,21,22,8,-27,-74,53,8,0,0,0},
  {-45,45,0,0,0,19,-45,62,23,19,4,-28,-75,54,4,0,0,0},
  {-45,45,0,0,0,15,-49,67,25,15,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,12,-51,71,27,12,-4,-28,-75,54,-4,0,0,0},
  {-45,45,0,0,0,8,-53,74,27,8,-8,-27,-74,53,-8,0,0,0},
  {-45,45,0,0,0,4,-54,75,28,4,-12,-27,-71,51,-12,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,-15,-25,-67,49,-15,0,0,0},
  {-45,45,0,0,0,-4,-54,75,28,-4,-19,-23,-62,45,-19,0,0,0},
  {-45,45,0,0,0,-8,-53,74,27,-8,-22,-21,-55,41,-22,0,0,0},
  {-45,45,0,0,0,-12,-51,71,27,-12,-26,-18,-46,35,-26,0,0,0},
  {-45,45,0,0,0,-12,-51,71,27,-12,-12,-27,-71,51,-12,0,0,0},
  {-45,45,0,0,0,-4,-54,75,28,-4,-4,-28,-75,54,-4,0,0,0},
  {-45,45,0,0,0,0,-55,76,28,0,0,-28,-76,55,0,0,0,0},
  {-45,45,0,0,0,0,-39,52,20,0,0,-20,-52,39,0,0,0,0}};
int delection = 0;

// create four servo objects (ESP32servo)
Servo servo3;
Servo servo4;

//PCA9685のアドレス指定
PCA9685 pwm = PCA9685(0x40);

// Published values for SG90 servos; adjust if needed (ESP32servo)
int minUs = 700;
int maxUs = 2300;

#define SERVOMIN 150            //Min pulse width (GWS Micro2BBMG) (PCA9685)
#define SERVOMAX 500            //Max pulse width (GWS Micro2BBMG) (PCA9685)

// These are all GPIO pins on the ESP32
// Recommended pins include 2,4,12-19,21-23,25-27,32-33
int servo3Pin = 12;  //ESP32servo
int servo4Pin = 13;  //ESP32servo

void setup() 
{ 
  M5.begin();
  dacWrite(25,0);  //for noise
  M5.Lcd.println("Bluetooth Now");
  
  Serial.begin(9600);
  SerialBT.begin("M5Stack");

  servo3.setPeriodHertz(50);      // Standard 50hz servo  (ESP32servo)
  servo4.setPeriodHertz(50);      // Standard 50hz servo  (ESP32servo)
    
  servo3.attach(servo3Pin, minUs, maxUs);  // ESP32servo
  servo4.attach(servo4Pin, minUs, maxUs);  // ESP32servo
  
  pwm.begin();                   //initial setting (for 0x40) (PCA9685)
  pwm.setPWMFreq(50);            //PWM 50Hz (for 0x40) (PCA9685)

  // Lcd display Face
  M5.Lcd.fillScreen(YELLOW); //base
  M5.Lcd.fillTriangle(79, 0, 159, 79, 239, 0, BLACK); //
  M5.Lcd.fillCircle(79, 119, 24, BLACK); //right eye
  M5.Lcd.fillCircle(239, 119, 24, BLACK); //left eye
  M5.Lcd.fillCircle(159, 179, 30, RED); //mouse
  M5.Lcd.fillRect(129, 149, 61, 31, YELLOW); //mouse

  //initial servo angle
  for (int j=0; j <=17 ; j++){
      ang0[j] = angZero[j] + angHome[j];
  }
  for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + angHome[j];
  }
  servo_set();
  
  Wire.begin();//start I2C
  
} 
 
void loop() 
{   
    if(SerialBT.available()){
      delection = SerialBT.read();
      switch (delection) {
        case 70: // F FWD
          SerialBT.println("FWD") ; 
          forward_step();
        break;
        case 76: // L LEFT
          SerialBT.println("LEFT") ; 
          left_step();
        break;
        case 82: // R Right
          SerialBT.println("RIGHT") ; 
          right_step();
        break;
        case 66: // B Back
          SerialBT.println("BACK") ; 
          back_step();
        break;
        case 72: // H Left Side
          SerialBT.println("LEFT_SIDE") ; 
          left_side_step();
        break;
        case 77: // M Right Side
          SerialBT.println("RIGHT_SIDE") ; 
          right_side_step();
        break;
        case 68: //Data
          SerialBT.println("DATA") ;
          for (int i=0; i <=17; i++){
            rs_gets_3c(ang_c);
            ang_b[i] = atoi(ang_c);
            if ((ang_b[i] >= 0) && (ang_b[i] <=180))
              {
                ang0[i] = ang1[i];
                ang1[i] = ang_b[i];
              }
          }
          servo_set();
        break;
      }
    }
    else{
          servo_set();
    }
} 

void servo_write(int ch, int ang){
  ang = map(ang, 0, 180, SERVOMIN, SERVOMAX); //angle（0～180）-> pulse width（150～500）
  pwm.setPWM(ch, 0, ang);
}

void forward_step()
{
  for (int i=0; i <=39 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + f_s[i][j];
    }
  servo_set();
  }
}

void left_step()
{
  for (int i=0; i <=29 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + l_s[i][j];
    }
  servo_set();
  }
}

void right_step()
{
  for (int i=0; i <=29 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + r_s[i][j];
    }
  servo_set();
  }
}

void back_step()
{
  for (int i=0; i <=39 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + b_s[i][j];
    }
  servo_set();
  }
}

void left_side_step()
{
  for (int i=0; i <=20 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + ls_s[i][j];
    }
  servo_set();
  }
}

void right_side_step()
{
  for (int i=0; i <=20 ; i++){
    for (int j=0; j <=17 ; j++){
      ang1[j] = angZero[j] + rs_s[i][j];
    }
  servo_set();
  }
}

void servo_set()
{
  int a[18],b[18];

  for (int j=0; j <=17 ; j++){
      a[j] = ang1[j] - ang0[j];
      b[j] = ang0[j];
      ang0[j] = ang1[j];
  }
  
  for (int k=0; k <=td ; k++){

      // ESP32servo

      servo3.write(a[0]*k/td+b[0]);
      servo4.write(a[1]*k/td+b[1]);

      // PCA9685
      servo_write(0,a[2]*k/td+b[2]);
      servo_write(1,a[3]*k/td+b[3]);
      servo_write(2,a[4]*k/td+b[4]);
      servo_write(3,a[5]*k/td+b[5]);
      servo_write(4,a[6]*k/td+b[6]);
      servo_write(5,a[7]*k/td+b[7]);
      servo_write(6,a[8]*k/td+b[8]);
      servo_write(7,a[9]*k/td+b[9]);
      servo_write(8,a[10]*k/td+b[10]);
      servo_write(9,a[11]*k/td+b[11]);
      servo_write(10,a[12]*k/td+b[12]);
      servo_write(11,a[13]*k/td+b[13]);
      servo_write(12,a[14]*k/td+b[14]);
      servo_write(13,a[15]*k/td+b[15]);
      servo_write(14,a[16]*k/td+b[16]);
      servo_write(15,a[17]*k/td+b[17]);

      delay(ts/td);
  }
}

void rs_gets_3c(char gtc[4])
{
  char gc;
  int i;
 
    sprintf(gtc,"    ");
    for( i = 0 ; i < 4 ; i++ )
    {
      gc = SerialBT.read();
      if (gc == ',')
        break;
      else
        gtc[i] = gc;
    }
}
